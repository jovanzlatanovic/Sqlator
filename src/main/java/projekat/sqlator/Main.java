/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projekat.sqlator;

import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import projekat.sqlator.DataHandler;

/**
 *
 * @author tesla
 */
public class Main extends javax.swing.JFrame {

    private String WORKING_PATH;

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        setLocationRelativeTo(null);
        
        Tree_Table.addTreeSelectionListener((TreeSelectionEvent e) ->
        {
            DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) Tree_Table.getLastSelectedPathComponent();
            handleTreeSelect(selectedNode);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        Panel_WorkArea = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Tree_Table = new javax.swing.JTree();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_DatabaseContent = new javax.swing.JTable();
        ToolBar = new javax.swing.JToolBar();
        Button_NewDatabase = new javax.swing.JButton();
        Button_OpenDatabase = new javax.swing.JButton();
        Button_CloseDatabase = new javax.swing.JButton();
        statusBar = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        Label_Status = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        Button_NewTable = new javax.swing.JButton();
        Button_ModifyTable = new javax.swing.JButton();
        Button_deleteTable = new javax.swing.JButton();
        MenuBar = new javax.swing.JMenuBar();
        jMenu_File = new javax.swing.JMenu();
        jMenu_Edit = new javax.swing.JMenu();
        jMenu_Help = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sqlator");

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Open a database");
        Tree_Table.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        Tree_Table.setSelectionRow(0);
        Tree_Table.setSelectionRows(new int[] {});
        jScrollPane2.setViewportView(Tree_Table);

        jTable_DatabaseContent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_DatabaseContent);

        javax.swing.GroupLayout Panel_WorkAreaLayout = new javax.swing.GroupLayout(Panel_WorkArea);
        Panel_WorkArea.setLayout(Panel_WorkAreaLayout);
        Panel_WorkAreaLayout.setHorizontalGroup(
            Panel_WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_WorkAreaLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE))
        );
        Panel_WorkAreaLayout.setVerticalGroup(
            Panel_WorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );

        ToolBar.setRollover(true);

        Button_NewDatabase.setText("Create new database");
        Button_NewDatabase.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Button_NewDatabaseActionPerformed(evt);
            }
        });
        ToolBar.add(Button_NewDatabase);

        Button_OpenDatabase.setText("Open database");
        Button_OpenDatabase.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Button_OpenDatabaseActionPerformed(evt);
            }
        });
        ToolBar.add(Button_OpenDatabase);

        Button_CloseDatabase.setText("Close database");
        Button_CloseDatabase.setEnabled(false);
        Button_CloseDatabase.setFocusable(false);
        Button_CloseDatabase.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Button_CloseDatabase.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Button_CloseDatabase.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Button_CloseDatabaseActionPerformed(evt);
            }
        });
        ToolBar.add(Button_CloseDatabase);

        javax.swing.GroupLayout statusBarLayout = new javax.swing.GroupLayout(statusBar);
        statusBar.setLayout(statusBarLayout);
        statusBarLayout.setHorizontalGroup(
            statusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(statusBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Label_Status)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        statusBarLayout.setVerticalGroup(
            statusBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusBarLayout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Label_Status)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jToolBar1.setRollover(true);

        Button_NewTable.setText("New Table");
        Button_NewTable.setEnabled(false);
        Button_NewTable.setFocusable(false);
        Button_NewTable.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Button_NewTable.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Button_NewTable.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Button_NewTableActionPerformed(evt);
            }
        });
        jToolBar1.add(Button_NewTable);

        Button_ModifyTable.setText("Modify table");
        Button_ModifyTable.setEnabled(false);
        Button_ModifyTable.setFocusable(false);
        Button_ModifyTable.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Button_ModifyTable.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Button_ModifyTable.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Button_ModifyTableActionPerformed(evt);
            }
        });
        jToolBar1.add(Button_ModifyTable);

        Button_deleteTable.setText("Delete table");
        Button_deleteTable.setEnabled(false);
        Button_deleteTable.setFocusable(false);
        Button_deleteTable.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Button_deleteTable.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Button_deleteTable.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                Button_deleteTableActionPerformed(evt);
            }
        });
        jToolBar1.add(Button_deleteTable);

        jMenu_File.setText("File");
        MenuBar.add(jMenu_File);

        jMenu_Edit.setText("Edit");
        MenuBar.add(jMenu_Edit);

        jMenu_Help.setText("Help");
        MenuBar.add(jMenu_Help);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Panel_WorkArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Panel_WorkArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(statusBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Button_NewDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_NewDatabaseActionPerformed
        //Create a new dialog that gets user input for the location of the new database
        //TODO: Handle when exits out of the dialog
        JDialogNewDatabase dialog = new JDialogNewDatabase(this, true);
        String path = dialog.showDialog();
        
        if (path == "false")
            return;
        
        boolean result = DataHandler.createNewDatabase(path);
        String reply;
        
        if (result)
        {
            WORKING_PATH = path;
            
            reply = "Created new database successfully.\n" + path;
            JOptionPane.showMessageDialog(rootPane, reply);
            JDialogNewTable newTableForm = new JDialogNewTable(this, true, WORKING_PATH);
            newTableForm.showDialog();
            openDatabase(path);
        }
        else
        {
            reply = "Error creating database.";
            JOptionPane.showMessageDialog(rootPane, reply);
        }
    }//GEN-LAST:event_Button_NewDatabaseActionPerformed

    private void Button_OpenDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_OpenDatabaseActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Select database");
        
        if (fileChooser.showDialog(this, "Select database") == JFileChooser.APPROVE_OPTION)
        {
            openDatabase(fileChooser.getSelectedFile().toString());
        }
    }//GEN-LAST:event_Button_OpenDatabaseActionPerformed

    private void Button_CloseDatabaseActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Button_CloseDatabaseActionPerformed
    {//GEN-HEADEREND:event_Button_CloseDatabaseActionPerformed
        closeDatabase();
    }//GEN-LAST:event_Button_CloseDatabaseActionPerformed

    private void Button_NewTableActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Button_NewTableActionPerformed
    {//GEN-HEADEREND:event_Button_NewTableActionPerformed
        JDialogNewTable newTableForm = new JDialogNewTable(this, true, WORKING_PATH);
        newTableForm.showDialog();
        fillTableView();
    }//GEN-LAST:event_Button_NewTableActionPerformed

    private void Button_deleteTableActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Button_deleteTableActionPerformed
    {//GEN-HEADEREND:event_Button_deleteTableActionPerformed
        String selectedTable = Tree_Table.getLastSelectedPathComponent().toString();
        int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete table '" + selectedTable + "'?\nAll data and fields inside this table will be lost.", "Delete table", 0);
        
        if (result == 0)
        {
            if (DataHandler.dropTable(WORKING_PATH, selectedTable))
            {
                JOptionPane.showMessageDialog(this, "Successfully deleted the table", "Delete table", 1);
                fillTableView();
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Error deleting the table", "Delete table", 0);
            }
        }
    }//GEN-LAST:event_Button_deleteTableActionPerformed

    private void Button_ModifyTableActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_Button_ModifyTableActionPerformed
    {//GEN-HEADEREND:event_Button_ModifyTableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Button_ModifyTableActionPerformed

    private void handleTreeSelect(DefaultMutableTreeNode selectedNode)
    {
        if (selectedNode == null)
            return;
        
        switch (selectedNode.getDepth())
        {
            case 1:     // selected a table

                break;
            case 2:     // selected a field
                
                break;
            default:
                return;
        }
    }
    
    private void openDatabase(String path)
    {
        WORKING_PATH = path;
        fillTableView();
        Label_Status.setText(path);
        Button_CloseDatabase.setEnabled(true);
        Button_NewTable.setEnabled(true);
        Button_ModifyTable.setEnabled(true);
        Button_deleteTable.setEnabled(true);
    }
    
    private void closeDatabase()
    {
        WORKING_PATH = null;
        clearTableView();
        Label_Status.setText(null);
        Button_CloseDatabase.setEnabled(false);
        Button_NewTable.setEnabled(false);
        Button_ModifyTable.setEnabled(false);
        Button_deleteTable.setEnabled(false);
        
        DefaultTreeModel model = (DefaultTreeModel) Tree_Table.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();

        root.setUserObject("Open a datbase");
    }
    
    private void fillTableView()
    {
        DefaultTreeModel model = (DefaultTreeModel) Tree_Table.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        root.removeAllChildren();
        
        Path tempPath = Paths.get(WORKING_PATH);
        Path fileName = tempPath.getFileName();
        root.setUserObject(fileName.toString());
        
        ArrayList<String> array = DataHandler.getTables(WORKING_PATH);
        for (int i = 0; i < array.size(); i++)
        {
            DefaultMutableTreeNode tableNameNode = new DefaultMutableTreeNode(array.get(i));
            model.insertNodeInto(tableNameNode, root, root.getChildCount());
           
            ArrayList<String> fields = DataHandler.getFields(WORKING_PATH, array.get(i));
            for (int j = 0; j < fields.size(); j++)
            {
                model.insertNodeInto(new DefaultMutableTreeNode(fields.get(j)), tableNameNode, tableNameNode.getChildCount());
            }
        }
        
        model.reload();
    }
    
    private void clearTableView()
    {
        DefaultTreeModel model = (DefaultTreeModel) Tree_Table.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        root.removeAllChildren();
        model.reload();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button_CloseDatabase;
    private javax.swing.JButton Button_ModifyTable;
    private javax.swing.JButton Button_NewDatabase;
    private javax.swing.JButton Button_NewTable;
    private javax.swing.JButton Button_OpenDatabase;
    private javax.swing.JButton Button_deleteTable;
    private javax.swing.JLabel Label_Status;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JPanel Panel_WorkArea;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.JTree Tree_Table;
    private javax.swing.JMenu jMenu_Edit;
    private javax.swing.JMenu jMenu_File;
    private javax.swing.JMenu jMenu_Help;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable_DatabaseContent;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel statusBar;
    // End of variables declaration//GEN-END:variables
}
